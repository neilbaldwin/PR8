# 128K SXROM

MEMORY
{
	ZP:     start =   $10, size =  $F0;
	STACK:  start =  $100, size =  $100;
	RAM:    start =  $200, size =  $600;
	
	HEADER: start =     0, size =   $10, fill=yes;

	WRAM0:	start = $6000, size = $1FFF;
	WRAM1:	start = $6000, size = $1FFF;
	WRAM2:	start = $6000, size = $1FFF;
	WRAM3:	start = $6000, size = $1FFF;
	
	ROM_00:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_0:	start = $BFF2, size = $0E, fill=yes;

	ROM_01:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_1:	start = $BFF2, size = $0E, fill=yes;

	ROM_02:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_2:	start = $BFF2, size = $0E, fill=yes;

	ROM_03:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_3:	start = $BFF2, size = $0E, fill=yes;

	ROM_04:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_4:	start = $BFF2, size = $0E, fill=yes;

	ROM_05:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_5:	start = $BFF2, size = $0E, fill=yes;

	ROM_06:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_6:	start = $BFF2, size = $0E, fill=yes;

	ROM_FIXED:	start = $C000, size = $0800, fill=yes, fillval=$FF;
	ROM_DPCM:	start = $C800, size = $37F2, fill=yes, fillval=$00;
	RESET_FIXED:	start = $FFF2, size = $0E, fill=yes;
}

# align allow .align N up to that amount

SEGMENTS
{
	ZEROPAGE:   load = ZP,      type = zp;
	STACK:      load = STACK,   type = bss,align=$100, optional=yes;
	BSS:        load = RAM,     type = bss,align=$200;
	RAM:		load = RAM	type = bss,align=$100;
	
	WRAM0:		load = WRAM0	type = bss,align=$100;
	WRAM1:		load = WRAM1	type = bss,align=$100;
	WRAM2:		load = WRAM2	type = bss,align=$100;
	WRAM3:		load = WRAM3	type = bss,align=$100;
	
	HEADER:     load = HEADER,  type = ro;

	CODE_00:	load = ROM_00, type=ro, align=$200;
	RESET_BANKED_0:	load = RESET_0, type=ro;
	CODE_01:       load = ROM_01,     type = ro, align=$200;
	RESET_BANKED_1:	load = RESET_1, type=ro;
	CODE_02:       load = ROM_02,     type = ro, align=$200;
	RESET_BANKED_2:	load = RESET_2, type=ro;
	CODE_03:       load = ROM_03,     type = ro, align=$200;
	RESET_BANKED_3:	load = RESET_3, type=ro;
	CODE_04:       load = ROM_04,     type = ro, align=$200;
	RESET_BANKED_4:	load = RESET_4, type=ro;
	CODE_05:       load = ROM_05,     type = ro, align=$200;
	RESET_BANKED_5:	load = RESET_5, type=ro;
	CODE_06:       load = ROM_06,     type = ro, align=$200;
	RESET_BANKED_6:	load = RESET_6, type=ro;
	
	CODE_FIXED:       load = ROM_FIXED,     type = ro, align=$100;
	DPCM:	load = ROM_DPCM,	type=ro, align=$100;
	RESET_FIXED:	load=RESET_FIXED, type=ro;
}
